plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.asd'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json:2.19.0'

	implementation "org.apache.logging.log4j:log4j-core:2.17.2"

	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.4'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	testImplementation 'com.h2database:h2:2.1.214'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

}



tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

tasks.withType(JavaCompile){
	options.compilerArgs = [
			'-Amapstruct.defaultComponentModel=spring'
	]
}


apply plugin: "jacoco"

jacoco {
	toolVersion = "0.8.5"
	reportsDir file("$buildDir/reports")
}

jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/jacoco/reports/report.xml")
		csv.enabled false
		html.enabled true
		html.destination file("${buildDir}/jacoco/reports")
	}
}



test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		includes= ["com.asd.fixedassets.*"]
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
	finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.95
			}
		}
	}
}
check.dependsOn jacocoTestCoverageVerification
